//Generated by MRKPortal Yggdrasil

import Foundation

protocol SkillsScenePresenterProtocol: GenericScenePresenterProtocol, ObservableObject {
    var skills: [SkillEntity] { get }
}

final class SkillsScenePresenter: SkillsScenePresenterProtocol {

	private let interactor: SkillsSceneInteractorProtocol
	private let router: GenericRouterProtocol

    @Published var skills: [SkillEntity] = []
    
	init(_ interactor: SkillsSceneInteractorProtocol, router: GenericRouterProtocol) {
		self.interactor = interactor
		self.router = router
        fetchSkills()
	}

    func fetchSkills() {
        Task { @MainActor in
            do {
                skills = try await interactor.fetchSkills()
            } catch {

            }
        }
    }
    
    func routing(direction: NavigationDirection) {
        router.routing(direction: direction)
    }
}

